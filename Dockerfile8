FROM python:3.10-bullseye as wheelbuilder

ARG MITMPROXY_WHEEL
COPY $MITMPROXY_WHEEL /wheels/
RUN pip install wheel && pip wheel --wheel-dir /wheels /wheels/${MITMPROXY_WHEEL}

FROM python:3.10-slim-bullseye

ENV LANG=en_US.UTF-8

RUN useradd -mU mitmproxy

RUN sed -i 's#http://deb.debian.org#https://mirrors.163.com#g' /etc/apt/sources.list
RUN sed -i '/session    required     pam_loginuid.so/c\#session    required     pam_loginuid.so' /etc/pam.d/cron
RUN apt-get update
RUN apt-get install -y --no-install-recommends curl git bash libxslt-dev libxml2-dev cron inetutils-ping procps vim
RUN  set -ex; \
     \
     curl -o /usr/local/bin/su-exec.c https://raw.githubusercontent.com/ncopa/su-exec/master/su-exec.c; \
     \
     fetch_deps='gcc libc-dev'; \
     apt-get install -y --no-install-recommends $fetch_deps; \
     rm -rf /var/lib/apt/lists/*; \
     gcc -Wall \
         /usr/local/bin/su-exec.c -o/usr/local/bin/su-exec; \
     chown root:root /usr/local/bin/su-exec; \
     chmod 0755 /usr/local/bin/su-exec; \
     rm /usr/local/bin/su-exec.c;

RUN apt-get update && \
  #设置时区
  apt-get install -y --no-install-recommends tzdata && \
  cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
  echo "Asia/Shanghai" > /etc/timezone

RUN apt-get update && apt-get install -y --no-install-recommends \
        libstdc++-9-doc \
        libstdc++6-9-dbg \
        libffi-dev \
        libssl-dev \
    && rm -rf /var/lib/apt/lists/*

RUN python3 -m ensurepip --upgrade \
    && pip3 install -U pip \
    && pip3 install protobuf==3.17.3 Brotli==1.0.9 cryptography==3.3 zstandard==0.15.2 msgpack==1.0.2 tornado==6.1 MarkupSafe==2.0.1 ruamel.yaml.clib==0.2.6 supervisor==4.2.2

RUN pip3 install git+https://github.com/ronghuaxueleng/supervisor-stdout.git

COPY --from=wheelbuilder /wheels /wheels
RUN pip3 install --no-index --find-links=/wheels mitmproxy
RUN rm -rf /wheels

VOLUME /home/mitmproxy/.mitmproxy

COPY docker-entrypoint.sh /usr/local/bin/
COPY _http2.py /usr/local/lib/python3.10/site-packages/mitmproxy/proxy/layers/http/

ENTRYPOINT ["docker-entrypoint.sh"]

EXPOSE 8080 8081

CMD ["mitmproxy"]
