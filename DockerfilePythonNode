# 使用官方 Debian 基础镜像，包含 Python 3.10 
FROM python:3.10.18-slim 
 
# 设置语言环境
ENV LANG=en_US.UTF-8
 
# 设置 Node.js  和 Yarn 版本
ENV NODE_VERSION=22.17.1
ENV YARN_VERSION=1.22.22
 
# 安装基础依赖和构建工具
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        gnupg \
        g++ \
        gcc \
        make \
        python3 \
        python3-setuptools \
        libgcc-s1 \
        binutils \
        libstdc++6 \
        ca-certificates \
        tar \
        xz-utils \
        bash && \
    mkdir -p /usr/local/include/node/openssl/archs
 
# 创建 node 用户
RUN groupadd -g 1000 node && \
    useradd -u 1000 -g node -s /bin/bash -d /home/node -m node 
 
# 下载并安装 Node.js （使用官方 Linux 二进制包）
WORKDIR /tmp 
 
RUN ARCH="x64" && \
    curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"  && \
    curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"  && \
    export GNUPGHOME="$(mktemp -d)" && \
    for key in \
        C0D6248439F1D5604AAFFB4021D900FFDB233756 \
        DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 \
        CC68F5A3106FF448322E48ED27F5E38D5B0A215F \
        8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
        890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
        C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
        108F52B48DB57BB0CC439B2997B01419BD92F80A \
        A363A499291CBBC940DD62E41F10027AF002F8B0 \
    ; do \
        { gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" && gpg --batch --fingerprint "$key"; } || \
        { gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" && gpg --batch --fingerprint "$key"; } ; \
    done && \
    gpg --batch --verify SHASUMS256.txt.asc  SHASUMS256.txt  && \
    grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$"  SHASUMS256.txt  | sha256sum -c - && \
    tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz"  -C /usr/local --strip-components=1 && \
    ln -s /usr/local/bin/node /usr/local/bin/nodejs && \
    rm -rf "$GNUPGHOME" node-v$NODE_VERSION-linux-$ARCH.tar.xz  SHASUMS256.txt.asc  SHASUMS256.txt 
 
# 删除 Node.js  中未使用的 OpenSSL 架构文件，节省空间
RUN find /usr/local/include/node/openssl/archs -mindepth 1 -maxdepth 1 ! -name "linux-x86_64" -exec rm -rf {} \;
 
# 安装 Yarn（使用 GPG 验证）
RUN curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"  && \
    curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"  && \
    export GNUPGHOME="$(mktemp -d)" && \
    for key in \
        6A010C5166006599AA17F08146C2130DFD2497F5 \
    ; do \
        gpg --batch --keyserver hkps://keys.openpgp.org  --recv-keys "$key" || \
        gpg --batch --keyserver keyserver.ubuntu.com  --recv-keys "$key"; \
    done && \
    gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc  yarn-v$YARN_VERSION.tar.gz  && \
    mkdir -p /opt && \
    tar -xzf yarn-v$YARN_VERSION.tar.gz  -C /opt/ && \
    ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn && \
    ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg && \
    rm -rf "$GNUPGHOME" yarn-v$YARN_VERSION.tar.gz.asc  yarn-v$YARN_VERSION.tar.gz 
 
# 安装 pip supervisor
RUN pip3 install supervisor
 
# 设置工作目录
WORKDIR /app
 
# 复制入口脚本与配置文件
COPY docker-entrypoint-py-nodejs.sh  /usr/local/bin/docker-entrypoint.sh  
RUN chmod +x /usr/local/bin/docker-entrypoint.sh 
COPY security.py  /.security 
COPY supervisord.conf  /etc/
 
# 建立软链接
RUN ln -s /usr/bin/supervisord /usr/local/bin/supervisord
 
# 设置入口点
ENTRYPOINT ["docker-entrypoint.sh"] 
 
# 默认启动命令
CMD ["/usr/local/bin/supervisord", "-c", "/etc/supervisord.conf"] 
